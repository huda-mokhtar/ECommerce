@model Bill
@{
    ViewData["Title"] = "Invoice";
}
@section Style{
    <link rel="stylesheet" href="~/css/Invoice.css">
}
<div class="Invoice">
    <header>
        <h1>Invoice</h1>
    </header>
    <article>
        <address>
            <p>Rivile Company</p>
        </address>
        <table class="meta">
            <tr>
                <th>Date</th>
                <td> <input type="datetime" id="Date" value='@DateTime.Now' disabled /></td>
            </tr>
            <tr>
                <th>Customer</th>
                <td><select asp-for="customerId" class="" asp-items="ViewBag.customerId"></select></td>
            </tr>
            <tr>
                <th>Discount</th>
                <td> <input asp-for="Discount" type="number" min="0" value="0" /></td>
            </tr>
            <tr>
                <th>Products</th>
                <td><select id="productId" class="selectproduct" asp-items="ViewBag.productId">
                    <option>-</option></select> </td>
                <td><a class="add mt-1" onclick='AddRow()'>+</a></td>
            </tr>
        </table>
        <table class="inventory">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Discount</th>
                </tr>
            </thead>
            <tbody>
              
            </tbody>
        </table>
        @*<table class="balance">
            <tr>
                <th><span>Total</span></th>
                <td><span data-prefix>$</span><span>00.00</span></td>
            </tr>
        </table>*@
        <input type="button" class="btn btn-primary col-3" value="Save" onclick="SaveData()"/>
    </article>
    <aside>
        <h1><span>Additional Notes</span></h1>
        <div >
            <p>A finance charge of 1.5% will be made on unpaid balances after 30 days.</p>
        </div>
    </aside>
</div>
@section Scripts{
    <script>
        var Products = ["-"];
        function AddRow() {
            product = $('.selectproduct').find(":selected").text();
            ProductId = $('.selectproduct').find(":selected").val();
            if (Products.find(a => a == product) == undefined) {
                $(".inventory tbody").append('<tr>' +
                    '<td id=' + ProductId + '><a class="cut" onclick="CutRow(event)">-</a><span>' + product + '</span></td >' +
                    '<td><input  type="number" min="0" value="0" /></td><td><input  type="number" min="0" value="0" /></td>' +
                    '</tr >'
                );
                Products.push(product);
            }

        }
        function CutRow(e) {
            row = e.path[2];
            row.parentNode.removeChild(row);
            //pop product from list
            Products.pop(e.target.parentNode.children[1].innerText);
        }
        function SaveData() {
            var productsItems=[];
            var date = $('#Date').val();
            var customer = $('#customerId').find(":selected").val();
            var discount = $('#Discount').val()
            $('.inventory tbody tr').each(function () {
                let tr = $(this).html();
                let id = $(tr).attr("id");
                let count = $($(this).children()[1]).children().val();
                let discount = $($(this).children()[2]).children().val()
                productsItems.push({Quantity: count, ProductId: id, Discount: discount })
                console.log(productsItems);
            })
            var bill = { Date: date, Discount: discount, customerId: customer, ProductItems: productsItems }
            $.ajax({
                url: '/Bills/SaveInvoice',
                method: 'Post',
                data: bill,
                success: (res) => {
                    window.location.href = '/Bills/Index';
                },
                error: (err) => {
                    console.log(err)
                }
            })
        }
      
        
    </script>
}